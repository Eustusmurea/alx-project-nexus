version: "3.9"

services:
  web:
    build: .
    command: >
      sh -c "python manage.py migrate --noinput &&
            python manage.py collectstatic --noinput &&
            gunicorn movie_backend.wsgi:application --bind 0.0.0.0:8000 --workers 4"
    volumes:
      - .:/app
    env_file:
      - .env
    expose:
      - "8000"
    depends_on:
      - db
      - redis
    restart: always


  celery_worker:
    build: .
    command: celery -A movie_backend worker -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: always

  celery_beat:
    build: .
    command: celery -A movie_backend beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: always

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-movie_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  redis:
    image: redis:7
    restart: always

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./staticfiles:/app/staticfiles:ro
      - ./media:/app/media:ro
    depends_on:
      - web
    restart: always

volumes:
  postgres_data:
